// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// swap_cc
Rcpp::NumericMatrix swap_cc(Rcpp::NumericMatrix values, Rcpp::IntegerMatrix index);
RcppExport SEXP finmix_swap_cc(SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type index(indexSEXP );
        Rcpp::NumericMatrix __result = swap_cc(values, index);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// swap_3d_cc
Rcpp::NumericVector swap_3d_cc(Rcpp::NumericVector values, Rcpp::IntegerMatrix index);
RcppExport SEXP finmix_swap_3d_cc(SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type index(indexSEXP );
        Rcpp::NumericVector __result = swap_3d_cc(values, index);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// swapInteger_cc
Rcpp::IntegerMatrix swapInteger_cc(Rcpp::IntegerMatrix values, Rcpp::IntegerMatrix index);
RcppExport SEXP finmix_swapInteger_cc(SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type index(indexSEXP );
        Rcpp::IntegerMatrix __result = swapInteger_cc(values, index);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// swapInd_cc
Rcpp::IntegerMatrix swapInd_cc(Rcpp::IntegerMatrix values, Rcpp::IntegerMatrix index);
RcppExport SEXP finmix_swapInd_cc(SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type index(indexSEXP );
        Rcpp::IntegerMatrix __result = swapInd_cc(values, index);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// swapST_cc
Rcpp::IntegerVector swapST_cc(Rcpp::IntegerVector values, Rcpp::IntegerMatrix index);
RcppExport SEXP finmix_swapST_cc(SEXP valuesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::IntegerMatrix >::type index(indexSEXP );
        Rcpp::IntegerVector __result = swapST_cc(values, index);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ldgamma_cc
Rcpp::NumericMatrix ldgamma_cc(Rcpp::NumericMatrix values, Rcpp::NumericVector shape, Rcpp::NumericVector rate);
RcppExport SEXP finmix_ldgamma_cc(SEXP valuesSEXP, SEXP shapeSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type shape(shapeSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rate(rateSEXP );
        Rcpp::NumericMatrix __result = ldgamma_cc(values, shape, rate);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// dgamma_cc
arma::mat dgamma_cc(Rcpp::NumericMatrix values, Rcpp::NumericVector shape, Rcpp::NumericVector rate);
RcppExport SEXP finmix_dgamma_cc(SEXP valuesSEXP, SEXP shapeSEXP, SEXP rateSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type shape(shapeSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rate(rateSEXP );
        arma::mat __result = dgamma_cc(values, shape, rate);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// lddirichlet_cc
Rcpp::NumericVector lddirichlet_cc(Rcpp::NumericMatrix values, Rcpp::NumericVector par);
RcppExport SEXP finmix_lddirichlet_cc(SEXP valuesSEXP, SEXP parSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP );
        Rcpp::NumericVector __result = lddirichlet_cc(values, par);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// ddirichlet_cc
arma::vec ddirichlet_cc(Rcpp::NumericMatrix values, Rcpp::NumericVector par);
RcppExport SEXP finmix_ddirichlet_cc(SEXP valuesSEXP, SEXP parSEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type values(valuesSEXP );
        Rcpp::traits::input_parameter< Rcpp::NumericVector >::type par(parSEXP );
        arma::vec __result = ddirichlet_cc(values, par);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// moments_cc
Rcpp::List moments_cc(Rcpp::S4 classS4);
RcppExport SEXP finmix_moments_cc(SEXP classS4SEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::S4 >::type classS4(classS4SEXP );
        Rcpp::List __result = moments_cc(classS4);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
// permmoments_cc
Rcpp::List permmoments_cc(Rcpp::S4 classS4);
RcppExport SEXP finmix_permmoments_cc(SEXP classS4SEXP) {
BEGIN_RCPP
    SEXP __sexp_result;
    {
        Rcpp::RNGScope __rngScope;
        Rcpp::traits::input_parameter< Rcpp::S4 >::type classS4(classS4SEXP );
        Rcpp::List __result = permmoments_cc(classS4);
        PROTECT(__sexp_result = Rcpp::wrap(__result));
    }
    UNPROTECT(1);
    return __sexp_result;
END_RCPP
}
